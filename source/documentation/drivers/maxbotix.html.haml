---
page_title_show: true
title: Artoo - Maxbotix Driver
author: The Hybrid Group
page_title: Drivers
page_subtitle: Artoo has a extensible system for connecting to hardware devices.
page_title_docs: Maxbotix
page_subtitle_docs: <a href='https://github.com/hybridgroup/artoo-gpio' class='repository'>Repository</a>
layout: documentation
subnav_driver: true
subnav_circuit_driver: true
active_menu_docs: true
subnavjs: true

arduino_platform: true
digispark_platform: true
spark_platform: true
---
-content_for :js_accordeon do
  :javascript
    $("#driver-panel").addClass("active-panel");
    $("#gpio li:nth-child(6)").addClass("active-link");
    $(".accordion-docs dt:nth-child(9) a:nth-child(2) img").addClass("rotate");

%section.intro
  =image_tag "/images/devices/maxbotix.jpg", class: "display"
  .info_intro
    %p Provides tools to use maxbotix sonar (range finder).
  .clear
  
%section.how_to#HowToConnect
  %h2 How To Connect
  %h3 For Arduino:
  :markdown
        :::ruby
        require 'artoo'
        connection :arduino, :adaptor => :firmata, :port => '127.0.0.1:8023'
        device :sonar, :driver => :maxbotix, :pin => 0, :interval => 0.5

  %h3 For Digispark:
  :markdown
        :::ruby
        require 'artoo'
        connection :digispark, :adaptor => :littlewire, :vendor => 0x1781, :product => 0x0c9f
        device :sonar, :driver => :maxbotix, :pin => 0, :interval => 0.5

%section.how-to#HowToUse
  %h2 How To Use
  %h3 How to use events and call them on your drivers
  %p Pretty simple, when the connection and the driver have been setup (as explained above) you can call events on them as follows:
  :markdown
        :::ruby
        on sonar, :range => proc { puts "range \#{ sonar.range }!" }
  %h3 Example: Setups a maxbotix driver and range event, displays the range every :interval amount of time.
  :markdown
        :::ruby

        require 'artoo'

        # Circuit and schematic here: http://www.electrojoystick.com/tutorial/?page_id=285

        #connection :arduino, :adaptor => :firmata, :port => '/dev/ttyACM0'
        connection :arduino, :adaptor => :firmata, :port => '127.0.0.1:4567'
        device :sonar, :driver => :maxbotix, :pin => 0, :interval => 0.5
        device :board, :driver => :device_info

        work do
          on sonar, :range => :sonar_reading

          puts "Firmware name: \#{board.firmware_name}"
          puts "Firmata version: \#{board.version}"
          puts "starting sonar..."
        end

        def sonar_reading(*args)
          puts args
        end

%section.public-methods
  .commands-api#Commands
    = partial "/documentation/drivers/partials/gpio/commands_maxbotix"
  .commands-api#Events
    = partial "/documentation/drivers/partials/gpio/events_maxbotix"
  
%section.circuit#Circuit
  %h2 Circuit
  .description-circuit
    %p  
  .image-circuit
    %img{:src => "/documentation/drivers/breadboards/gpio/maxbotix_bb.png", :alt => ""}/ 
  .clear 

%section.compatability.hardware#Compatability
  %h2 Compatibility
  =# TODO: Update platform list at the top of the page.
  .devices
    = partial "documentation/partials/devices_platforms"
