---
page_title_show: true
title: Artoo - Button Driver
author: The Hybrid Group
page_title: Drivers
page_subtitle: Artoo has a extensible system for connecting to hardware devices.
page_title_docs: Button
page_subtitle_docs: <a href='https://github.com/hybridgroup/artoo-gpio' class='repository'>Repository</a>
layout: documentation
subnav_driver: true
subnav_circuit_driver: true
active_menu_docs: true
subnavjs: true

arduino_platform: true
beaglebone_platform: true
digispark_platform: true
raspberry_platform: true
spark_platform: true
---
-content_for :js_accordeon do
  :javascript
    $("#driver-panel").addClass("active-panel");
    $("#gpio li:nth-child(2)").addClass("active-link");
    $(".accordion-docs dt:nth-child(9) a:nth-child(2) img").addClass("rotate");

%section.intro
  = image_tag "/images/devices/button.jpg", class: "display"
  .info_intro
    %p Simple interface that makes it possible to register clicks through physical input.
  .clear
%section.how_to#HowToConnect
  %h2 How To Connect
  %h3 For Arduino:
  :markdown
        :::ruby
        require 'artoo'
        connection :arduino, :adaptor => :firmata, :port => '127.0.0.1:8023'
        device :button, :driver => :button, :pin => 2, :interval => 0.01
  %h3 For Digispark:
  :markdown
        :::ruby
        require 'artoo'
        connection :digispark, :adaptor => :littlewire, :vendor => 0x1781, :product => 0x0c9f
        device :button, :driver => :button, :pin => 2, :interval => 0.01

%section.how-to#HowToUse
  %h2 How To Use
  %p Pretty simple, when the connection and the driver have been setup (as explained above) you can call events on them as follows:
  :markdown
        :::ruby
        on button, :push    => proc { puts "button pressed!" }
        on button, :release => proc { puts "button released!" }
  %h3 Example using a button to turn a LED on and off.
  :markdown
        :::ruby
        require 'artoo'

        connection :arduino, adaptor: :firmata, port: '127.0.0.1:8023'
        device :led, driver: :led, pin: 13
        device :button, driver: :button, pin: 2, interval: 0.01

        work do
          puts "Press the button connected on pin \#{ button.pin }..."

          on button, :push    => proc { led.on }
          on button, :release => proc { led.off }
        end

%section.public-methods
  .commands-api#Commands
    = partial "/documentation/drivers/partials/gpio/commands_button"
  .commands-api#Events
    = partial "/documentation/drivers/partials/gpio/events_button"

%section.circuit#Circuit
  %h2 Circuit
  .description-circuit
    %p 
  .image-circuit
    %img{:src => "/documentation/drivers/breadboards/gpio/button_bb.png", :alt => ""}/ 
  .clear

%section.compatability.hardware#Compatability
  %h2 Compatibility
  =# TODO: Update platform list at the top of the page.
  .devices
    = partial "documentation/partials/devices_platforms"
