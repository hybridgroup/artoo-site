---
page_title_show: true
title: Artoo - Servo Driver
author: The Hybrid Group
page_title: Drivers
page_subtitle: Artoo has a extensible system for connecting to hardware devices.
page_title_docs: Servo
page_subtitle_docs: <a href='https://github.com/hybridgroup/artoo-gpio' class='repository'>Repository</a>
layout: documentation
subnav_driver: true
subnav_circuit_driver: true
active_menu_docs: true
subnavjs: true

arduino_platform: true
digispark_platform: true
spark_platform: true
raspberry_platform: true
---
-content_for :js_accordeon do
  :javascript
    $("#driver-panel").addClass("active-panel");
    $("#gpio li:nth-child(8)").addClass("active-link");
    $(".accordion-docs dt:nth-child(9) a:nth-child(2) img").addClass("rotate");

%section.intro
  = image_tag "/images/devices/servo.jpg", class: "display"
  .info_intro
    %p Provides an interface for making servos easy to work and interact with from Artoo.
  .clear
  
%section.how_to#HowToConnect
  %h2 How To Connect
  %h3 For Arduino:
  :markdown
        :::ruby
        require 'artoo'
        connection :arduino, :adaptor => :firmata, :port => '127.0.0.1:8023'
        device :servo, :driver => :servo, :pin => 3 # pin must be a PWM pin

  %h3 For Digispark:
  :markdown
        :::ruby
        require 'artoo'
        connection :digispark, :adaptor => :littlewire, :vendor => 0x1781, :product => 0x0c9f
        device :servo, :driver => :servo, :pin => 3 # pin must be a PWM pin

%section.how-to#HowToUse
  %h2 How To Use
  %h3 Example moves a servo from angle 0 to 90 to 180.
  :markdown
        :::ruby
        require 'artoo'

        # Circuit and schematic here: http://arduino.cc/en/Tutorial/Sweep

        #connection :arduino, :adaptor => :firmata, :port => '/dev/tty*'
        connection :arduino, :adaptor => :firmata, :port => '127.0.0.1:8023'
        device :board, :driver => :device_info
        device :servo, :driver => :servo, :pin => 3 # pin must be a PWM pin

        work do
          puts "Firmware name: \#{board.firmware_name}"
          puts "Firmata version: \#{board.version}"

          servo.move(0) # reset the position of the sweep (same as servo.min)

          every(2) do
            case servo.current_angle
            when 0 then servo.center
            when 90 then servo.max
            when 180 then servo.min
            end
          end
        end

%section.public-methods
  .commands-api#Commands
    = partial "/documentation/drivers/partials/gpio/commands_servo"

%section.circuit#Circuit
  %h2 Circuit
  .description-circuit
    %p 
  .image-circuit 
    %img{:src => "/documentation/drivers/breadboards/gpio/servo_bb.png", :alt => ""}/ 
  .clear 
  
%section.compatability.hardware#Compatability
  %h2 Compatibility
  %p 
    %b Important Note:
    You need to install
    = link_to "pi-blaster", "https://github.com/sarfata/pi-blaster", target: :blank
    in the 
    %b raspberry-pi, 
    this project enables PWM in the GPIO pins .
  .devices
    =# TODO: Update platform list at the top of the page.
    = partial "documentation/partials/devices_platforms"



