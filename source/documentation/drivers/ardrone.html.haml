---
page_title_show: true
title: Artoo - ARDrone Driver
author: The Hybrid Group
page_title: Drivers
page_subtitle: Artoo has a extensible system for connecting to hardware devices.
page_title_docs: Ardrone Flight
page_subtitle_docs: <a href='https://github.com/hybridgroup/artoo-ardrone' class='repository'>Repository</a>
layout: documentation
subnav_driver: true
active_menu_docs: true
subnavjs: true

ardrone_platform: true
---
-content_for :js_accordeon do
  :javascript
    $("#driver-panel").addClass("active-panel");
    $("#ardrone li:nth-child(1)").addClass("active-link");
    $(".accordion-docs dt:nth-child(9) a:nth-child(2) img").addClass("rotate");

%section.intro
  =image_tag "/images/devices/ardrone-flight.jpg", class: "display"
  .info_intro
    %p
      Allows user to send flight control commands to an ARDrone. Flight control commands are those used to tell the ARDrone to take off, land, and or any number of other autonomous flight manuvers.
  .clear
  
%section.how_to#HowToConnect
  %h2 How To Connect
  %p
    Communication with the ARDrone's flight control interface takes place using a WiFi connection. The ARDrone is a WiFi access point, so it normally can be the only device you connect to, without some additional effort to reconfigure the drone itself to put it into infrastructure mode.
  :markdown
        :::ruby
        require 'artoo'
        connection :ardrone, :adaptor => :ardrone, :port => '192.168.1.1:5556'
        device :drone, :driver => :ardrone, :connection => :ardrone

%section.how-to#HowToUse
  %h2 How To Use
  %h3 Example of controlling an ARDrone.
  :markdown
        :::ruby
        require 'artoo'

        connection :ardrone, :adaptor => :ardrone, :port => '192.168.1.1:5556'
        device :drone, :driver => :ardrone, :connection => :ardrone

        work do
          drone.start
          drone.take_off

          after(15.seconds) { drone.hover.land }
          after(20.seconds) { drone.stop }
        end

  %h3 Example of ARDrone doing a flip.
  :markdown
        :::ruby
        require 'artoo'

        connection :ardrone, :adaptor => :ardrone
        device :drone, :driver => :ardrone, :connection => :ardrone

        connection :navigation, :adaptor => :ardrone_navigation, :port => '192.168.1.1:5554'
        device :nav, :driver => :ardrone_navigation, :connection => :navigation

        work do
          on drone, :ready => :fly
          drone.start(nav)
        end

        def fly(*data)
          drone.take_off
          after(10.seconds) { drone.animate(:flip_ahead, 1000) }
          after(15.seconds) { drone.hover.land }
          after(20.seconds) { drone.stop }
        end

%section.public-methods
  .commands-api#Commands
    = partial "/documentation/drivers/partials/ardrone/commands_flight"
  .commands-api#Events
    = partial "/documentation/drivers/partials/ardrone/events_flight"



%section.compatability.hardware#Compatability
  %h2 Compatibility
  .devices
    =# TODO: Update platform list at the top of the page.
    = partial "documentation/partials/devices_platforms"
