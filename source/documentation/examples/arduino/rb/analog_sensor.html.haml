---
layout: documentation
page_title_show: true
title: "Artoo Example - analog_sensor"
page_title: "Example: analog_sensor"
author: The Hybrid Group
description: A Artoo code example
page_subtitle: "<a href='https://github.com/hybridgroup/artoo-arduino/tree/master/examples' target='_blank'>View In Repo</a>"
active_menu_docs: true
---

-content_for :js_accordeon do
  :javascript
    $("#example-panel").addClass("active-panel");
    $(".accordion-docs dt:nth-child(15) a:nth-child(2) img").addClass("rotate");

.example
  :markdown
        :::ruby
        require 'artoo'

        # Substitute the button with an analog sensor like a photoresistor and 
        # change to the correct analog input, in this case pin A0.
        # Circuit and schematic here: http://arduino.cc/en/tutorial/button

        connection :firmata, :adaptor => :firmata, :port => '/dev/ttyACM0' #linux
        #connection :firmata, :adaptor => :firmata, :port => '127.0.0.1:8023'

        # Analog inputs are based from 0 to 5 on the Arduino UNO, may vary on other arduino boards
        device :sensor, driver: :analog_sensor, pin: 0, interval: 0.25, upper: 900, lower: 200
        device :led, :driver => :led, :pin => 8

        work do
          puts
          puts "Reading sensor in analog pin \#{ sensor.pin }"
          puts "Reading intervals every => \#{ sensor.interval }"
          puts "Initial sensor value => \#{ sensor.analog_read(0) }"
          puts "Sensor upper trigger set at value => \#{ sensor.upper }"
          puts "Sensor lower trigger set at value => \#{ sensor.lower }"

          on sensor, :upper => proc {
            puts "UPPER LIMIT REACHED!"
            led.off
          }

          on sensor, :lower => proc {
            puts "LOWER SENSOR LIMIT REACHED!"
            led.on
          }
        end

